import React from 'react';
import {connect} from 'react-redux';
import {signIn, signOut} from '../actions';

class GoogleAuth extends React.Component {
  
     
      componentDidMount(){
        window.gapi.load('client:auth2',()=>{
            window.gapi.client.init({
              clientId: "442443483995-6pujd5ejpgdf7a8cs367ovgsoasb4fj2.apps.googleusercontent.com",
              scope: 'email'
            }).then(()=>{
                this.auth=window.gapi.auth2.getAuthInstance();
                this.onAuthchange(this.auth.isSignedIn.get())
                
                this.auth.isSignedIn.listen(this.onAuthchange)
            })
        })
      }

      onAuthchange=(isSignedIn)=>{
        if(isSignedIn){
          this.props.signIn(this.auth.currentUser.get().getId())
        } else {
          this.props.signOut()
        }
      }

      onSignIn=()=>{
          this.auth.signIn()
      }

      onSignOut=()=>{
          this.auth.signOut()
      }

      renderAuthButton(){
          if(this.props.isSignedIn===null){
              return null
          } else if (this.props.isSignedIn){
              return <button onClick={this.onSignOut}>Sign Out</button>
          } else {
              return <button onClick={this.onSignIn}>Log In with Google</button>
          }
      }

      render(){
        console.log('auth', this.props.auth)
        return <div>{this.renderAuthButton()}</div>
      }
}

const mapStateToProps=({auth})=>{
  return {
    isSignedIn: auth.isSignedIn
  }
}

export default connect(mapStateToProps,{
  signIn,
  signOut
})(GoogleAuth);